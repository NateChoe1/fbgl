NAME
	fbgl - a library to interface with the linux framebuffer

SYNOPSIS
	#include <fbgl.h>

DESCRIPTION
	fbgl (FrameBuffer Graphics Library) gives users a way to interface with
	the linux framebuffer (/dev/fbX) with an extra layer of abstraction. The
	library functions include line drawing, circle drawing, polygon drawing,
	and more.

	All fbgl functions which modify the screen work with Framebuffer structs

	typedef struct {
		int *fb;
		int width;
		int height;
	} Framebuffer;

	where fb is mmaped to /dev/fbX and width and height correspond to the
	dimensions of the screen.

	All colors in fbgl are integers, and can be obtained through the macro

	rgb(r, g, b)

	All coordinates in fbgl start at the top left, the x value increases as
	you move to the right, and the y value increases as you move down.

FUNCTIONS
	Framebuffer createFramebuffer(char *fbpath);
	
	Creates a new framebuffer with the specified framebuffer as the path,
	or with /dev/fb0 if fbpath is NULL. The recommended usage is

	createFramebuffer(getenv("FRAMEBUFFER"));

	void setPoint(Framebuffer fb, int x, int y, int color);

	Sets the point at x, y to the value at color. One could also use

	fb.fb[y * width + x] = color;

	if boundary checking isn't a necessity.

	clearFramebuffer(Framebuffer fb, int color);

	Sets every pixel of the framebuffer to the specified color.

	drawLine(Framebuffer fb, int x1, int y1, int x2, int y2, int color);

	Draws a line from (x1, y1) to (x2, y2) with the specified color

	drawCircle(Framebuffer fb, int xc, int yc, int r, int color);

	Draws a circle with the center at (xc, yc) of radius r with the
	specified color.

	drawFilledCircle(Framebuffer fb,
		int xc, int yc, int r, int border, int fill);
	
	Draws a circle with the center at (xc, yc) of radius r with a border
	color of border and a fill color of fill.

	drawPolygon(Framebuffer fb, int pointCount, int *points, int color);

	Draws a polygon with pointCount points of the specified color where
	points is an array of the form

	{x1, y1, x2, y2, x3, y3, ...}

	noecho();
	yesecho();

	Stops echoing or starts echoing stdin, when the text in the terminal
	under your masterpiece is modified, the text modifies your art.

	int getColor(Framebuffer fb, int x, int y);

	Returns the color at the coordinates in the framebuffer.

	fb.fb[y * fb.width + x];

	also works if boundary checking doesn't matter.

	saveFrame(Framebuffer fb, char *path);
	
	Takes a screenshot of the framebuffer and writes it to path in ppm format.
